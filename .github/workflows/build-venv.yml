name: Rebuild python virtual env

on:
  push:
    tags:
      - v*

jobs:
  build:
    strategy:
      matrix:
        python_version: ['3.8','3.11']
    runs-on: ubuntu-20.04
    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV &&
          echo "PKG_NAME=`basename $GITHUB_REPOSITORY -private`" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Configure git
        run: git config --global url."https://${{ secrets.REPO_READ_ONLY_TOKEN }}@github.com/".insteadOf "ssh://git@github.com/"

      - name: install requirements
        run: sudo apt-get update && sudo apt-get install libxmlsec1-dev

      - name: prep
        run: sudo mkdir -p /var/www/html

      - name: chown
        run: sudo chown `id -u`:`id -g` /var/www/html

      - name: Copy files
        run: cp -r * /var/www/html

      - name: Create env
        run: cd /var/www/html; make venv

      - name: Create archive
        run: cd /var/www/html; tar -czf /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/${{ env.PKG_NAME }}_venv_${{ env.RELEASE_VERSION }}_python${{ matrix.python_version }}.tar.gz .venv

      - name: Upload venv tar
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PKG_NAME }}_venv_${{ env.RELEASE_VERSION }}_python${{ matrix.python_version }}
          path: ${{ env.PKG_NAME }}_venv_${{ env.RELEASE_VERSION }}_python${{ matrix.python_version }}.tar.gz
