[app]
base_url = http://localhost:8001
redirect_url = https://localhost:8006/continue
mock_enabled = False
jwt_priv_key_path = secrets/nl-uzi-login-controller.key
jwt_crt_path = secrets/nl-uzi-login-controller.crt
http_timeout = 30

[session]
jwt_issuer=nl-rdo-max-private
jwt_issuer_crt_path=secrets/nl-rdo-max-private.crt
jwt_audience=nl-uzi-login-controller

[redis]
# Connecting to the redis server through parameters:
host = localhost
port = 6379
namespace = nl-uzi-login-controller
expire = 300
ssl = False
key =
cert =
cafile =

[irma]
irma_internal_server_url = https://irma.uzipoc.nl
irma_disclose_prefix = irma-demo.uzipoc-cibg.uzi-2
irma_revocation = true
# If session_server_events_enabled = True: use Server Sent Events for checking the status of the Yivi session during login
session_server_events_enabled = True
# After ... ms the front-end should stop trying to check session status through Server Sent Events in case of failure
session_server_events_timeout = 2000
# The front-end should poll for the yivi session status every ... ms (fallback for SSE, or primary when SSE is disabled)
session_polling_interval = 1000

[uvicorn]
# The host to be running on
host = 0.0.0.0
port = 8001

# Are we running in debug mode? turns on auto-reload on code changes
reload = True
workers = 1

# Should we create an SSL connection through uvicorn?
use_ssl = False

# Setting for the SSL connection when enabled, defined by the use_ssl setting.
base_dir = secrets/ssl
cert_file = server.crt
key_file = server.key

[oidc_provider]
config_list_path=oidc-providers-list.json
authorize_endpoint = http://localhost:8003/authorize
token_endpoint = http://localhost:8003/token
userinfo_endpoint = http://localhost:8003/userinfo
client_id = 1234567890
redirect_uri = http://localhost:8001/login/oidc/callback
scopes = openid uzi
client_secret = secret
jwt_pub_key_path = secrets/nl-rdo-uzipoc-oidc-provider.pub
